---
- name: Install and configure WSUS on Windows Server
  hosts: windows
  tasks:
    - name: Install WSUS role and features
      win_feature:
        name: 
          - UpdateServices
          - UpdateServices-DB
          - UpdateServices-RSAT
        state: present
        include_management_tools: yes

    - name: Ensure WSUS Content directory exists
      win_file:
        path: C:\WSUS
        state: directory

    - name: Perform initial WSUS post-installation
      win_command: |
        C:\Program Files\Update Services\Tools\wsusutil.exe postinstall CONTENT_DIR=C:\WSUS
      args:
        creates: 'C:\WSUS\WsusContent'
        
    - name: Configure WSUS to sync from Microsoft Update
      win_shell: |
        $wsus = Get-WsusServer
        $config = $wsus.GetConfiguration()
        $config.SyncFromMicrosoftUpdate = $true
        $config.Save()

    - name: Configure WSUS update languages
      win_shell: |
        $wsus = Get-WsusServer
        $config = $wsus.GetConfiguration()
        $config.AllowedInstallationLanguages = @("en")
        $config.Save()

    - name: Configure WSUS update classifications
      win_shell: |
        $wsus = Get-WsusServer
        $classifications = $wsus.GetUpdateClassifications()
        $critical = $classifications | Where-Object {$_.Title -eq "Critical Updates"}
        $security = $classifications | Where-Object {$_.Title -eq "Security Updates"}
        $wsus.SetUpdateClassifications(@($critical, $security))

    - name: Schedule WSUS synchronization
      win_scheduled_task:
        name: WSUS_Sync
        description: "WSUS synchronization task"
        actions:
          - path: "C:\Program Files\Update Services\Tools\wsusutil.exe"
            arguments: "sync"
        triggers:
          - type: daily
            start_boundary: '2024-07-21T02:00:00'
            enabled: yes

    - name: Approve updates automatically
      win_shell: |
        $wsus = Get-WsusServer
        $updates = $wsus.GetUpdates() | Where-Object { $_.ApprovalState -eq "NotApproved" }
        foreach ($update in $updates) {
          $update.Approve('Install')
        }
